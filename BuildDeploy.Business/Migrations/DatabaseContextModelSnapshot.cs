// <auto-generated />
using System;
using BuildDeploy.Business.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BuildDeploy.Business.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("BuildDeploy.Business.Entity.FtpProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Hostname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Port")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FtpProfiles");
                });

            modelBuilder.Entity("BuildDeploy.Business.Entity.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DefaultDeployPath")
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultReleasePath")
                        .HasColumnType("TEXT");

                    b.Property<int?>("FtpProfileId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastTimeOpened")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FtpProfileId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("BuildDeploy.Business.Entity.Project", b =>
                {
                    b.HasOne("BuildDeploy.Business.Entity.FtpProfile", "FtpProfile")
                        .WithMany("Projects")
                        .HasForeignKey("FtpProfileId");

                    b.Navigation("FtpProfile");
                });

            modelBuilder.Entity("BuildDeploy.Business.Entity.FtpProfile", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
